// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Daniel Medina",
            "url": "http://github.com/dmedinao1",
            "email": "daniel.medina@mercadolibre.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/transacciones": {
            "get": {
                "description": "Obtiene todas las transacciones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Obtiene todas las transacciones",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token de autorización",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto con la lista de transacciones encontradas",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno de la aplicación",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    }
                }
            }
        },
        "/transacciones/{id}": {
            "put": {
                "description": "Reemplaza la transacción",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Reemplaza una transacción ya creada por datos nuevos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token de autorización",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Id de la transacción a reemplazar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transacción a reemplazar",
                        "name": "transacción",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.fullTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto con la transacción reemplazada",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Parámetros de entrada inválidos",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Transacción no encontrada",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno de la aplicación",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Guarda una nueva transacción",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Guarda una nueva transacción",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token de autorización",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Transacción a reemplazar",
                        "name": "transacción",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.fullTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto con la transacción guardada",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Parámetros de entrada inválidos",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno de la aplicación",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina una transacción por su id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Elimina una transacción",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token de autorización",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Id de la transacción a eliminar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto con el número de id de la transacción eliminada",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Parámetros de entrada inválidos",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Transacción no encontrada",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno de la aplicación",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Actualiza el código y el monto de la transacción",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Actualiza una transacción",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token de autorización",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Id de la transacción a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Objeto con el nuevo código y la nueva cantidad",
                        "name": "transacción",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.codeAndQuantityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto con el nuevo código y la nueva cantidad",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Parámetros de entrada inválidos",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Transacción no encontrada",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno de la aplicación",
                        "schema": {
                            "$ref": "#/definitions/web.ApiResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.codeAndQuantityRequest": {
            "type": "object",
            "required": [
                "quantity",
                "transactionCode"
            ],
            "properties": {
                "quantity": {
                    "type": "number"
                },
                "transactionCode": {
                    "type": "string"
                }
            }
        },
        "server.fullTransactionRequest": {
            "type": "object",
            "required": [
                "currency",
                "quantity",
                "transactionCode",
                "transactionDate",
                "transmitter"
            ],
            "properties": {
                "currency": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number"
                },
                "transactionCode": {
                    "type": "string"
                },
                "transactionDate": {
                    "type": "string"
                },
                "transmitter": {
                    "type": "string"
                }
            }
        },
        "web.ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "error": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Mercado libre bootcamp | Transacciones API",
	Description:      "Servicios para crear, listar, actualizar y eliminar transacciones.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
